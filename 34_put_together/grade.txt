Grading at Wed Apr  7 21:02:55 UTC 2021
Attempting to compile:
rm -f  outname.o  counts.o  main.o  kv.o count_values *~
gcc -c -Wall -Werror -std=gnu99 -pedantic -ggdb3 outname.c
gcc -c -Wall -Werror -std=gnu99 -pedantic -ggdb3 counts.c
gcc -c -Wall -Werror -std=gnu99 -pedantic -ggdb3 main.c
gcc -c -Wall -Werror -std=gnu99 -pedantic -ggdb3 kv.c
gcc -Wall -Werror -std=gnu99 -pedantic -ggdb3 -o count_values  outname.o  counts.o  main.o  kv.o
#################################################
testcase1:
testcase1 passed, your program successfully indicated a failure
  - Valgrind was clean (no errors, no memory leaks)
valgrind was clean
#################################################
testcase2:
Your file matched the expected output
Comparing file list1a.txt.counts with answer
Your output is correct
Comparing file list1b.txt.counts with answer
Your file matched the expected output
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==861== Memcheck, a memory error detector
==861== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==861== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==861== 
==861== Parent PID: 860
==861== 
==861== 
==861== HEAP SUMMARY:
==861==     in use at exit: 3,864 bytes in 25 blocks
==861==   total heap usage: 124 allocs, 99 frees, 31,392 bytes allocated
==861== 
==861== 2,760 bytes in 23 blocks are definitely lost in loss record 2 of 2
==861==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==861==    by 0x4EA89E7: getdelim (iogetdelim.c:62)
==861==    by 0x400D7B: countFile (main.c:18)
==861==    by 0x400E20: main (main.c:44)
==861== 
==861== LEAK SUMMARY:
==861==    definitely lost: 2,760 bytes in 23 blocks
==861==    indirectly lost: 0 bytes in 0 blocks
==861==      possibly lost: 0 bytes in 0 blocks
==861==    still reachable: 1,104 bytes in 2 blocks
==861==         suppressed: 0 bytes in 0 blocks
==861== Reachable blocks (those to which a pointer was found) are not shown.
==861== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==861== 
==861== For counts of detected and suppressed errors, rerun with: -v
==861== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
#################################################
testcase3:
Your file matched the expected output
Comparing file list2a.txt.counts with answer
Your output is correct
Comparing file list2b.txt.counts with answer
Your file matched the expected output
Your output is correct
Comparing file list2c.txt.counts with answer
Your file matched the expected output
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==873== Memcheck, a memory error detector
==873== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==873== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==873== 
==873== Parent PID: 872
==873== 
==873== 
==873== HEAP SUMMARY:
==873==     in use at exit: 4,536 bytes in 27 blocks
==873==   total heap usage: 108 allocs, 81 frees, 38,428 bytes allocated
==873== 
==873== 2,880 bytes in 24 blocks are definitely lost in loss record 2 of 2
==873==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==873==    by 0x4EA89E7: getdelim (iogetdelim.c:62)
==873==    by 0x400D7B: countFile (main.c:18)
==873==    by 0x400E20: main (main.c:44)
==873== 
==873== LEAK SUMMARY:
==873==    definitely lost: 2,880 bytes in 24 blocks
==873==    indirectly lost: 0 bytes in 0 blocks
==873==      possibly lost: 0 bytes in 0 blocks
==873==    still reachable: 1,656 bytes in 3 blocks
==873==         suppressed: 0 bytes in 0 blocks
==873== Reachable blocks (those to which a pointer was found) are not shown.
==873== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==873== 
==873== For counts of detected and suppressed errors, rerun with: -v
==873== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
#################################################
testcase4:
Your file matched the expected output
Comparing file list3a.txt.counts with answer
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==886== Memcheck, a memory error detector
==886== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==886== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==886== 
==886== Parent PID: 885
==886== 
==886== 
==886== HEAP SUMMARY:
==886==     in use at exit: 1,632 bytes in 9 blocks
==886==   total heap usage: 60 allocs, 51 frees, 73,964 bytes allocated
==886== 
==886== 240 bytes in 1 blocks are definitely lost in loss record 1 of 3
==886==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==886==    by 0x4EA8A2A: getdelim (iogetdelim.c:102)
==886==    by 0x400D7B: countFile (main.c:18)
==886==    by 0x400E20: main (main.c:44)
==886== 
==886== 840 bytes in 7 blocks are definitely lost in loss record 3 of 3
==886==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==886==    by 0x4EA89E7: getdelim (iogetdelim.c:62)
==886==    by 0x400D7B: countFile (main.c:18)
==886==    by 0x400E20: main (main.c:44)
==886== 
==886== LEAK SUMMARY:
==886==    definitely lost: 1,080 bytes in 8 blocks
==886==    indirectly lost: 0 bytes in 0 blocks
==886==      possibly lost: 0 bytes in 0 blocks
==886==    still reachable: 552 bytes in 1 blocks
==886==         suppressed: 0 bytes in 0 blocks
==886== Reachable blocks (those to which a pointer was found) are not shown.
==886== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==886== 
==886== For counts of detected and suppressed errors, rerun with: -v
==886== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: B
